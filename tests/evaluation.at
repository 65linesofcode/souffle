# Copyright (c) 2013, Oracle and/or its affiliates. All rights reserved.
#
# The Universal Permissive License (UPL), Version 1.0
#
# Subject to the condition set forth below, permission is hereby granted to any person obtaining a copy of this software,
# associated documentation and/or data (collectively the "Software"), free of charge and under any and all copyright rights in the 
# Software, and any and all patent rights owned or freely licensable by each licensor hereunder covering either (i) the unmodified 
# Software as contributed to or provided by such licensor, or (ii) the Larger Works (as defined below), to deal in both
# 
# (a) the Software, and
# (b) any piece of software and/or hardware listed in the lrgrwrks.txt file if one is included with the Software (each a “Larger
# Work” to which the Software is contributed by such licensors),
#
# without restriction, including without limitation the rights to copy, create derivative works of, display, perform, and 
# distribute the Software and make, use, sell, offer for sale, import, export, have made, and have sold the Software and the 
# Larger Work(s), and to sublicense the foregoing rights on either these or other terms.
#
# This license is subject to the following condition:
# The above copyright notice and either this complete permission notice or at a minimum a reference to the UPL must be included in 
# all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES
# OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
# LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR
# IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.

dnl Positive test cases for evaluating Datalog programs

POSITIVE_TEST([load],[evaluation])
POSITIVE_TEST([number_constants],[evaluation])
POSITIVE_TEST([multiple_heads],[evaluation])
POSITIVE_TEST([arithm],[evaluation])
POSITIVE_TEST([metro],[evaluation])
POSITIVE_TEST([subtype],[evaluation])
POSITIVE_TEST([subtype2],[evaluation])
POSITIVE_TEST([aliases],[evaluation])
POSITIVE_TEST([records],[evaluation])
POSITIVE_TEST([records1],[evaluation])
POSITIVE_TEST([records2],[evaluation])
POSITIVE_TEST([records3],[evaluation])
POSITIVE_TEST([records4],[evaluation])
POSITIVE_TEST([records5],[evaluation])
POSITIVE_TEST([unpacking],[evaluation])
POSITIVE_TEST([flights],[evaluation])
POSITIVE_TEST([linksum],[evaluation])
POSITIVE_TEST([tree],[evaluation])
POSITIVE_TEST([family],[evaluation])
POSITIVE_TEST([counter],[evaluation])
POSITIVE_TEST([plus],[evaluation])
POSITIVE_TEST([cat],[evaluation])
POSITIVE_TEST([ordinals],[evaluation])
POSITIVE_TEST([func],[evaluation])
POSITIVE_TEST([match3],[evaluation])
POSITIVE_TEST([match2],[evaluation])
POSITIVE_TEST([match],[evaluation])
POSITIVE_TEST([contains],[evaluation])
POSITIVE_TEST([x9],[evaluation])
POSITIVE_TEST([rsg],[evaluation])
POSITIVE_TEST([clique],[evaluation])
POSITIVE_TEST([ship],[evaluation])
POSITIVE_TEST([small],[evaluation])
POSITIVE_TEST([graph],[evaluation])
POSITIVE_TEST([grad],[evaluation])
POSITIVE_TEST([grammar],[evaluation])
POSITIVE_TEST([mrtc],[evaluation])
POSITIVE_TEST([paths],[evaluation])
POSITIVE_TEST([puzzle],[evaluation])
POSITIVE_TEST([recursion],[evaluation])
POSITIVE_TEST([relop],[evaluation])
POSITIVE_TEST([binop],[evaluation])
POSITIVE_TEST([facts],[evaluation])
POSITIVE_TEST([cproject],[evaluation])
POSITIVE_TEST([tc],[evaluation])
POSITIVE_TEST([mutrecursion],[evaluation])
POSITIVE_TEST([empty_relations],[evaluation])
POSITIVE_TEST([neg1],[evaluation])
POSITIVE_TEST([neg2],[evaluation])
POSITIVE_TEST([neg3],[evaluation])
POSITIVE_TEST([neg4],[evaluation])
POSITIVE_TEST([neg5],[evaluation])
POSITIVE_TEST([neg6],[evaluation])
POSITIVE_TEST([dnf],[evaluation])
POSITIVE_TEST([indirect_negation],[evaluation])
POSITIVE_TEST([game2],[evaluation])
POSITIVE_TEST([orbits],[evaluation])
POSITIVE_TEST([orbits1],[evaluation])
POSITIVE_TEST([rmut],[evaluation])
POSITIVE_TEST([rmut2],[evaluation])
POSITIVE_TEST([cliquer],[evaluation])
POSITIVE_TEST([pointsto],[evaluation])
POSITIVE_TEST([ackermann],[evaluation])
POSITIVE_TEST([choice],[evaluation])
POSITIVE_TEST([equal],[evaluation])
POSITIVE_TEST([fib],[evaluation])
POSITIVE_TEST([list],[evaluation])
POSITIVE_TEST([minmax],[evaluation])
POSITIVE_TEST([mul],[evaluation])
POSITIVE_TEST([prime],[evaluation])
POSITIVE_TEST([prime2],[evaluation])
POSITIVE_TEST([dfa_live_vars],[evaluation])
POSITIVE_TEST([cba_expr_value],[evaluation])
POSITIVE_TEST([traces],[evaluation])
POSITIVE_TEST([turing1],[evaluation])
POSITIVE_TEST([tic-tac-toe],[evaluation])
POSITIVE_TEST([palindrome],[evaluation])
POSITIVE_TEST([sequences],[evaluation])
POSITIVE_TEST([set_ops],[evaluation])
POSITIVE_TEST([rec_lists],[evaluation])
POSITIVE_TEST([rec_lists2],[evaluation])
POSITIVE_TEST([components],[evaluation])
POSITIVE_TEST([components1],[evaluation])
POSITIVE_TEST([components2],[evaluation])
POSITIVE_TEST([components3],[evaluation])
POSITIVE_TEST([components_generic],[evaluation])
POSITIVE_TEST([strategies],[evaluation])
POSITIVE_TEST([aggregates],[evaluation])
POSITIVE_TEST([aggregates2],[evaluation])
POSITIVE_TEST([trans],[evaluation])
POSITIVE_TEST([index],[evaluation])
POSITIVE_TEST([term],[evaluation])
POSITIVE_TEST([dominance],[evaluation])
POSITIVE_TEST([dfa_summary_function],[evaluation])
POSITIVE_TEST([dfa],[evaluation])
POSITIVE_TEST([java-pointsto],[evaluation]) 
POSITIVE_MULTI_TEST([nfsa2fsa],[evaluation], [[ex1], [ex2]])
POSITIVE_TEST([comp-parametrized],[evaluation])
POSITIVE_TEST([comp-parametrized-inherit],[evaluation])
POSITIVE_TEST([comp-parametrized-multilvl],[evaluation])
POSITIVE_TEST([comp-override1],[evaluation])
POSITIVE_TEST([comp-override2],[evaluation])
POSITIVE_TEST([comp-override3],[evaluation])
POSITIVE_TEST([andersen],[evaluation])
POSITIVE_TEST([lubm],[evaluation])
POSITIVE_TEST([hmmer],[evaluation])
