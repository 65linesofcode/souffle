souffleSfcCZ8.cpp: In member function ‘void souffle::Sf___souffleSfcCZ8::runFunction(std::__cxx11::string, std::__cxx11::string)’:
souffleSfcCZ8.cpp:202:85: error: no matching function for call to ‘souffle::ram::Relation<souffle::ram::GenericSetup<souffle::ram::detail::std_unordered_config>, 3u, souffle::ram::index<2u, 0u, 1u> >::equalRange(const souffle::ram::Tuple<int, 3ul>&, souffle::ram::detail::GenericRelation<souffle::ram::detail::std_unordered_config, 3u, souffle::ram::index<2u, 0u, 1u> >::operation_context&)’
 auto range = rel_5_delta_B->equalRange<2>(key,READ_OP_CONTEXT(rel_5_delta_B_op_ctxt));
                                                                                     ^
In file included from ../../../src/../include/souffle/CompiledSouffle.h:22:0,
                 from souffleSfcCZ8.cpp:1:
../../../src/../include/souffle/CompiledRamRelation.h:1229:10: note: candidate: template<class I> decltype (((const souffle::ram::detail::GenericRelation<config, arity, Indices>*)this)->souffle::ram::detail::GenericRelation<config, arity, Indices>::indices.equal_range<I>(value)) souffle::ram::detail::GenericRelation<config, arity, Indices>::equalRange(const tuple_type&, souffle::ram::detail::GenericRelation<config, arity, Indices>::operation_context&) const [with I = I; config = souffle::ram::detail::std_unordered_config; unsigned int arity = 3u; Indices = {souffle::ram::index<2u, 0u, 1u>}]
     auto equalRange(const tuple_type& value, operation_context&) const
          ^
../../../src/../include/souffle/CompiledRamRelation.h:1229:10: note:   template argument deduction/substitution failed:
../../../src/../include/souffle/CompiledRamRelation.h:1235:10: note: candidate: template<class I> decltype (((const souffle::ram::detail::GenericRelation<config, arity, Indices>*)this)->souffle::ram::detail::GenericRelation<config, arity, Indices>::indices.equal_range<I>(value)) souffle::ram::detail::GenericRelation<config, arity, Indices>::equalRange(const tuple_type&) const [with I = I; config = souffle::ram::detail::std_unordered_config; unsigned int arity = 3u; Indices = {souffle::ram::index<2u, 0u, 1u>}]
     auto equalRange(const tuple_type& value) const -> decltype(indices.template equal_range<I>(value)) {
          ^
../../../src/../include/souffle/CompiledRamRelation.h:1235:10: note:   template argument deduction/substitution failed:
../../../src/../include/souffle/CompiledRamRelation.h:1240:10: note: candidate: template<unsigned int ...Columns> decltype (((const souffle::ram::detail::GenericRelation<config, arity, Indices>*)this)->souffle::ram::detail::GenericRelation<config, arity, Indices>::indices.equal_range<souffle::ram::index<Columns ...> >(value)) souffle::ram::detail::GenericRelation<config, arity, Indices>::equalRange(const tuple_type&) const [with unsigned int ...Columns = {Columns ...}; config = souffle::ram::detail::std_unordered_config; unsigned int arity = 3u; Indices = {souffle::ram::index<2u, 0u, 1u>}]
     auto equalRange(const tuple_type& value) const
          ^
../../../src/../include/souffle/CompiledRamRelation.h:1240:10: note:   template argument deduction/substitution failed:
souffleSfcCZ8.cpp:202:85: note:   candidate expects 1 argument, 2 provided
 auto range = rel_5_delta_B->equalRange<2>(key,READ_OP_CONTEXT(rel_5_delta_B_op_ctxt));
                                                                                     ^
In file included from ../../../src/../include/souffle/CompiledSouffle.h:22:0,
                 from souffleSfcCZ8.cpp:1:
../../../src/../include/souffle/CompiledRamRelation.h:1246:10: note: candidate: template<unsigned int ...Columns> decltype (((const souffle::ram::detail::GenericRelation<config, arity, Indices>*)this)->souffle::ram::detail::GenericRelation<config, arity, Indices>::indices.equal_range<souffle::ram::index<Columns ...> >(value)) souffle::ram::detail::GenericRelation<config, arity, Indices>::equalRange(const tuple_type&, souffle::ram::detail::GenericRelation<config, arity, Indices>::operation_context&) const [with unsigned int ...Columns = {Columns ...}; config = souffle::ram::detail::std_unordered_config; unsigned int arity = 3u; Indices = {souffle::ram::index<2u, 0u, 1u>}]
     auto equalRange(const tuple_type& value, operation_context&) const
          ^
../../../src/../include/souffle/CompiledRamRelation.h:1246:10: note:   template argument deduction/substitution failed:
../../../src/../include/souffle/CompiledRamRelation.h: In substitution of ‘template<unsigned int ...Columns> decltype (((const souffle::ram::detail::GenericRelation<config, arity, Indices>*)this)->souffle::ram::detail::GenericRelation<config, arity, Indices>::indices.equal_range<souffle::ram::index<Columns ...> >(value)) souffle::ram::detail::GenericRelation<config, arity, Indices>::equalRange(const tuple_type&, souffle::ram::detail::GenericRelation<config, arity, Indices>::operation_context&) const [with unsigned int ...Columns = {2u}]’:
souffleSfcCZ8.cpp:202:85:   required from here
../../../src/../include/souffle/CompiledRamRelation.h:1246:10: error: no matching function for call to ‘souffle::ram::detail::GenericRelationGroup<souffle::ram::detail::std_unordered_config, 3u, souffle::ram::index<2u, 0u, 1u> >::equal_range(const tuple_type&) const’
../../../src/../include/souffle/CompiledRamRelation.h:1087:5: note: candidate: template<class Index> typename std::enable_if<typename config::covers_query<Index, First>::value, souffle::range<typename config::set_type<arity, First>::const_iterator> >::type souffle::ram::detail::GenericRelationGroup<config, arity, First, Rest ...>::equal_range(const tuple_type&) const [with Index = Index; config = souffle::ram::detail::std_unordered_config; unsigned int arity = 3u; First = souffle::ram::index<2u, 0u, 1u>; Rest = {}]
     equal_range(const tuple_type& t) const {
     ^
../../../src/../include/souffle/CompiledRamRelation.h:1087:5: note:   template argument deduction/substitution failed:
../../../src/../include/souffle/CompiledRamRelation.h: In substitution of ‘template<class Index> typename std::enable_if<typename config::covers_query<Index, First>::value, souffle::range<typename config::set_type<arity, First>::const_iterator> >::type souffle::ram::detail::GenericRelationGroup<config, arity, First, Rest ...>::equal_range(const tuple_type&) const [with Index = souffle::ram::index<2u>]’:
../../../src/../include/souffle/CompiledRamRelation.h:1246:10:   required by substitution of ‘template<unsigned int ...Columns> decltype (((const souffle::ram::detail::GenericRelation<config, arity, Indices>*)this)->souffle::ram::detail::GenericRelation<config, arity, Indices>::indices.equal_range<souffle::ram::index<Columns ...> >(value)) souffle::ram::detail::GenericRelation<config, arity, Indices>::equalRange(const tuple_type&, souffle::ram::detail::GenericRelation<config, arity, Indices>::operation_context&) const [with unsigned int ...Columns = {2u}]’
souffleSfcCZ8.cpp:202:85:   required from here
../../../src/../include/souffle/CompiledRamRelation.h:1087:5: error: no type named ‘type’ in ‘struct std::enable_if<false, souffle::range<std::__detail::_Node_const_iterator<souffle::ram::Tuple<int, 3ul>, true, true> > >’
../../../src/../include/souffle/CompiledRamRelation.h: In substitution of ‘template<unsigned int ...Columns> decltype (((const souffle::ram::detail::GenericRelation<config, arity, Indices>*)this)->souffle::ram::detail::GenericRelation<config, arity, Indices>::indices.equal_range<souffle::ram::index<Columns ...> >(value)) souffle::ram::detail::GenericRelation<config, arity, Indices>::equalRange(const tuple_type&, souffle::ram::detail::GenericRelation<config, arity, Indices>::operation_context&) const [with unsigned int ...Columns = {2u}]’:
souffleSfcCZ8.cpp:202:85:   required from here
../../../src/../include/souffle/CompiledRamRelation.h:1116:5: note: candidate: template<class Index> typename std::enable_if<(! typename config::covers_query<Index, First>::value), decltype (((souffle::ram::detail::GenericRelationGroup<config, arity, First, Rest ...>*)(void)0)->souffle::ram::detail::GenericRelationGroup<config, arity, First, Rest ...>::nested.equal_range<Index>(souffle::ram::Tuple<int, arity>()))>::type souffle::ram::detail::GenericRelationGroup<config, arity, First, Rest ...>::equal_range(const tuple_type&) const [with Index = Index; config = souffle::ram::detail::std_unordered_config; unsigned int arity = 3u; First = souffle::ram::index<2u, 0u, 1u>; Rest = {}]
     equal_range(const tuple_type& t) const {
     ^
../../../src/../include/souffle/CompiledRamRelation.h:1116:5: note:   template argument deduction/substitution failed:
../../../src/../include/souffle/CompiledRamRelation.h: In substitution of ‘template<class Index> typename std::enable_if<(! typename config::covers_query<Index, First>::value), decltype (((souffle::ram::detail::GenericRelationGroup<config, arity, First, Rest ...>*)(void)0)->souffle::ram::detail::GenericRelationGroup<config, arity, First, Rest ...>::nested.equal_range<Index>(souffle::ram::Tuple<int, arity>()))>::type souffle::ram::detail::GenericRelationGroup<config, arity, First, Rest ...>::equal_range(const tuple_type&) const [with Index = souffle::ram::index<2u>]’:
../../../src/../include/souffle/CompiledRamRelation.h:1246:10:   required by substitution of ‘template<unsigned int ...Columns> decltype (((const souffle::ram::detail::GenericRelation<config, arity, Indices>*)this)->souffle::ram::detail::GenericRelation<config, arity, Indices>::indices.equal_range<souffle::ram::index<Columns ...> >(value)) souffle::ram::detail::GenericRelation<config, arity, Indices>::equalRange(const tuple_type&, souffle::ram::detail::GenericRelation<config, arity, Indices>::operation_context&) const [with unsigned int ...Columns = {2u}]’
souffleSfcCZ8.cpp:202:85:   required from here
../../../src/../include/souffle/CompiledRamRelation.h:1116:5: error: no matching function for call to ‘souffle::ram::detail::GenericRelationGroup<souffle::ram::detail::std_unordered_config, 3u>::equal_range(souffle::ram::Tuple<int, 3ul>)’
souffleSfcCZ8.cpp:203:24: error: range-based ‘for’ expression of type ‘auto’ has incomplete type
 for(const auto& env1 : range) {
                        ^
souffleSfcCZ8.cpp: In instantiation of ‘void souffle::Sf___souffleSfcCZ8::runFunction(std::__cxx11::string, std::__cxx11::string) [with bool performIO = false; std::__cxx11::string = std::__cxx11::basic_string<char>]’:
souffleSfcCZ8.cpp:260:33:   required from here
souffleSfcCZ8.cpp:204:23: error: no matching function for call to ‘souffle::ram::Tuple<int, 3ul>::Tuple(<brace-enclosed initializer list>)’
 if( !rel_4_B->contains(Tuple<RamDomain,3>({((env0[0]) + (env0[2])) + (env1[0]),((env0[1]) - (env0[2])) + (env1[1]),(env0[2]) + (RamDomain(1))}),READ_OP_CONTEXT(rel_4_B_op_ctxt))) {
                       ^
In file included from ../../../src/../include/souffle/CompiledRamRecord.h:19:0,
                 from ../../../src/../include/souffle/CompiledSouffle.h:21,
                 from souffleSfcCZ8.cpp:1:
../../../src/../include/souffle/CompiledRamTuple.h:36:8: note: candidate: souffle::ram::Tuple<int, 3ul>::Tuple()
 struct Tuple {
        ^
../../../src/../include/souffle/CompiledRamTuple.h:36:8: note:   candidate expects 0 arguments, 1 provided
../../../src/../include/souffle/CompiledRamTuple.h:36:8: note: candidate: constexpr souffle::ram::Tuple<int, 3ul>::Tuple(const souffle::ram::Tuple<int, 3ul>&)
../../../src/../include/souffle/CompiledRamTuple.h:36:8: note:   no known conversion for argument 1 from ‘<brace-enclosed initializer list>’ to ‘const souffle::ram::Tuple<int, 3ul>&’
../../../src/../include/souffle/CompiledRamTuple.h:36:8: note: candidate: constexpr souffle::ram::Tuple<int, 3ul>::Tuple(souffle::ram::Tuple<int, 3ul>&&)
../../../src/../include/souffle/CompiledRamTuple.h:36:8: note:   no known conversion for argument 1 from ‘<brace-enclosed initializer list>’ to ‘souffle::ram::Tuple<int, 3ul>&&’
souffleSfcCZ8.cpp:205:165: error: no matching function for call to ‘souffle::ram::Tuple<int, 3ul>::Tuple(<brace-enclosed initializer list>)’
 Tuple<RamDomain,3> tuple({(RamDomain)(((env0[0]) + (env0[2])) + (env1[0])),(RamDomain)(((env0[1]) - (env0[2])) + (env1[1])),(RamDomain)((env0[2]) + (RamDomain(1)))});
                                                                                                                                                                     ^
In file included from ../../../src/../include/souffle/CompiledRamRecord.h:19:0,
                 from ../../../src/../include/souffle/CompiledSouffle.h:21,
                 from souffleSfcCZ8.cpp:1:
../../../src/../include/souffle/CompiledRamTuple.h:36:8: note: candidate: souffle::ram::Tuple<int, 3ul>::Tuple()
 struct Tuple {
        ^
../../../src/../include/souffle/CompiledRamTuple.h:36:8: note:   candidate expects 0 arguments, 1 provided
../../../src/../include/souffle/CompiledRamTuple.h:36:8: note: candidate: constexpr souffle::ram::Tuple<int, 3ul>::Tuple(const souffle::ram::Tuple<int, 3ul>&)
../../../src/../include/souffle/CompiledRamTuple.h:36:8: note:   no known conversion for argument 1 from ‘<brace-enclosed initializer list>’ to ‘const souffle::ram::Tuple<int, 3ul>&’
../../../src/../include/souffle/CompiledRamTuple.h:36:8: note: candidate: constexpr souffle::ram::Tuple<int, 3ul>::Tuple(souffle::ram::Tuple<int, 3ul>&&)
../../../src/../include/souffle/CompiledRamTuple.h:36:8: note:   no known conversion for argument 1 from ‘<brace-enclosed initializer list>’ to ‘souffle::ram::Tuple<int, 3ul>&&’
souffleSfcCZ8.cpp: In instantiation of ‘void souffle::Sf___souffleSfcCZ8::runFunction(std::__cxx11::string, std::__cxx11::string) [with bool performIO = true; std::__cxx11::string = std::__cxx11::basic_string<char>]’:
souffleSfcCZ8.cpp:262:133:   required from here
souffleSfcCZ8.cpp:204:23: error: no matching function for call to ‘souffle::ram::Tuple<int, 3ul>::Tuple(<brace-enclosed initializer list>)’
 if( !rel_4_B->contains(Tuple<RamDomain,3>({((env0[0]) + (env0[2])) + (env1[0]),((env0[1]) - (env0[2])) + (env1[1]),(env0[2]) + (RamDomain(1))}),READ_OP_CONTEXT(rel_4_B_op_ctxt))) {
                       ^
In file included from ../../../src/../include/souffle/CompiledRamRecord.h:19:0,
                 from ../../../src/../include/souffle/CompiledSouffle.h:21,
                 from souffleSfcCZ8.cpp:1:
../../../src/../include/souffle/CompiledRamTuple.h:36:8: note: candidate: souffle::ram::Tuple<int, 3ul>::Tuple()
 struct Tuple {
        ^
../../../src/../include/souffle/CompiledRamTuple.h:36:8: note:   candidate expects 0 arguments, 1 provided
../../../src/../include/souffle/CompiledRamTuple.h:36:8: note: candidate: constexpr souffle::ram::Tuple<int, 3ul>::Tuple(const souffle::ram::Tuple<int, 3ul>&)
../../../src/../include/souffle/CompiledRamTuple.h:36:8: note:   no known conversion for argument 1 from ‘<brace-enclosed initializer list>’ to ‘const souffle::ram::Tuple<int, 3ul>&’
../../../src/../include/souffle/CompiledRamTuple.h:36:8: note: candidate: constexpr souffle::ram::Tuple<int, 3ul>::Tuple(souffle::ram::Tuple<int, 3ul>&&)
../../../src/../include/souffle/CompiledRamTuple.h:36:8: note:   no known conversion for argument 1 from ‘<brace-enclosed initializer list>’ to ‘souffle::ram::Tuple<int, 3ul>&&’
souffleSfcCZ8.cpp:205:165: error: no matching function for call to ‘souffle::ram::Tuple<int, 3ul>::Tuple(<brace-enclosed initializer list>)’
 Tuple<RamDomain,3> tuple({(RamDomain)(((env0[0]) + (env0[2])) + (env1[0])),(RamDomain)(((env0[1]) - (env0[2])) + (env1[1])),(RamDomain)((env0[2]) + (RamDomain(1)))});
                                                                                                                                                                     ^
In file included from ../../../src/../include/souffle/CompiledRamRecord.h:19:0,
                 from ../../../src/../include/souffle/CompiledSouffle.h:21,
                 from souffleSfcCZ8.cpp:1:
../../../src/../include/souffle/CompiledRamTuple.h:36:8: note: candidate: souffle::ram::Tuple<int, 3ul>::Tuple()
 struct Tuple {
        ^
../../../src/../include/souffle/CompiledRamTuple.h:36:8: note:   candidate expects 0 arguments, 1 provided
../../../src/../include/souffle/CompiledRamTuple.h:36:8: note: candidate: constexpr souffle::ram::Tuple<int, 3ul>::Tuple(const souffle::ram::Tuple<int, 3ul>&)
../../../src/../include/souffle/CompiledRamTuple.h:36:8: note:   no known conversion for argument 1 from ‘<brace-enclosed initializer list>’ to ‘const souffle::ram::Tuple<int, 3ul>&’
../../../src/../include/souffle/CompiledRamTuple.h:36:8: note: candidate: constexpr souffle::ram::Tuple<int, 3ul>::Tuple(souffle::ram::Tuple<int, 3ul>&&)
../../../src/../include/souffle/CompiledRamTuple.h:36:8: note:   no known conversion for argument 1 from ‘<brace-enclosed initializer list>’ to ‘souffle::ram::Tuple<int, 3ul>&&’
In file included from ../../../src/../include/souffle/CompiledSouffle.h:22:0,
                 from souffleSfcCZ8.cpp:1:
../../../src/../include/souffle/CompiledRamRelation.h: In instantiation of ‘std::vector<souffle::range<decltype (declval<typename std::conditional<souffle::ram::index_utils::contains_full_index<arity, Indices ...>::value, souffle::ram::detail::GenericRelationGroup<config, arity, Indices ...>, souffle::ram::detail::GenericRelationGroup<config, arity, typename souffle::ram::index_utils::get_full_index<arity>::type, Indices ...> >::type>().get<typename souffle::ram::index_utils::get_first_full_index<arity, Indices ..., typename souffle::ram::index_utils::get_full_index<arity>::type>::type>().begin())> > souffle::ram::detail::GenericRelation<config, arity, Indices>::partition() const [with config = souffle::ram::detail::std_set_config; unsigned int arity = 3u; Indices = {souffle::ram::index<2u, 0u, 1u>}; decltype (declval<typename std::conditional<souffle::ram::index_utils::contains_full_index<arity, Indices ...>::value, souffle::ram::detail::GenericRelationGroup<config, arity, Indices ...>, souffle::ram::detail::GenericRelationGroup<config, arity, typename souffle::ram::index_utils::get_full_index<arity>::type, Indices ...> >::type>().get<typename souffle::ram::index_utils::get_first_full_index<arity, Indices ..., typename souffle::ram::index_utils::get_full_index<arity>::type>::type>().begin()) = std::_Rb_tree_const_iterator<souffle::ram::Tuple<int, 3ul> >; typename std::conditional<souffle::ram::index_utils::contains_full_index<arity, Indices ...>::value, souffle::ram::detail::GenericRelationGroup<config, arity, Indices ...>, souffle::ram::detail::GenericRelationGroup<config, arity, typename souffle::ram::index_utils::get_full_index<arity>::type, Indices ...> >::type = souffle::ram::detail::GenericRelationGroup<souffle::ram::detail::std_set_config, 3u, souffle::ram::index<2u, 0u, 1u> >; typename souffle::ram::index_utils::get_first_full_index<arity, Indices ..., typename souffle::ram::index_utils::get_full_index<arity>::type>::type = souffle::ram::index<2u, 0u, 1u>]’:
souffleSfcCZ8.cpp:83:37:   required from ‘void souffle::Sf___souffleSfcCZ8::runFunction(std::__cxx11::string, std::__cxx11::string) [with bool performIO = false; std::__cxx11::string = std::__cxx11::basic_string<char>]’
souffleSfcCZ8.cpp:260:33:   required from here
../../../src/../include/souffle/CompiledRamRelation.h:1274:19: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
             if (i > s) {
                   ^
../../../src/../include/souffle/CompiledRamRelation.h: In instantiation of ‘std::vector<souffle::range<decltype (declval<typename std::conditional<souffle::ram::index_utils::contains_full_index<arity, Indices ...>::value, souffle::ram::detail::GenericRelationGroup<config, arity, Indices ...>, souffle::ram::detail::GenericRelationGroup<config, arity, typename souffle::ram::index_utils::get_full_index<arity>::type, Indices ...> >::type>().get<typename souffle::ram::index_utils::get_first_full_index<arity, Indices ..., typename souffle::ram::index_utils::get_full_index<arity>::type>::type>().begin())> > souffle::ram::detail::GenericRelation<config, arity, Indices>::partition() const [with config = souffle::ram::detail::std_unordered_config; unsigned int arity = 3u; Indices = {souffle::ram::index<2u, 0u, 1u>}; decltype (declval<typename std::conditional<souffle::ram::index_utils::contains_full_index<arity, Indices ...>::value, souffle::ram::detail::GenericRelationGroup<config, arity, Indices ...>, souffle::ram::detail::GenericRelationGroup<config, arity, typename souffle::ram::index_utils::get_full_index<arity>::type, Indices ...> >::type>().get<typename souffle::ram::index_utils::get_first_full_index<arity, Indices ..., typename souffle::ram::index_utils::get_full_index<arity>::type>::type>().begin()) = std::__detail::_Node_const_iterator<souffle::ram::Tuple<int, 3ul>, true, true>; typename std::conditional<souffle::ram::index_utils::contains_full_index<arity, Indices ...>::value, souffle::ram::detail::GenericRelationGroup<config, arity, Indices ...>, souffle::ram::detail::GenericRelationGroup<config, arity, typename souffle::ram::index_utils::get_full_index<arity>::type, Indices ...> >::type = souffle::ram::detail::GenericRelationGroup<souffle::ram::detail::std_unordered_config, 3u, souffle::ram::index<2u, 0u, 1u> >; typename souffle::ram::index_utils::get_first_full_index<arity, Indices ..., typename souffle::ram::index_utils::get_full_index<arity>::type>::type = souffle::ram::index<2u, 0u, 1u>]’:
souffleSfcCZ8.cpp:165:37:   required from ‘void souffle::Sf___souffleSfcCZ8::runFunction(std::__cxx11::string, std::__cxx11::string) [with bool performIO = false; std::__cxx11::string = std::__cxx11::basic_string<char>]’
souffleSfcCZ8.cpp:260:33:   required from here
../../../src/../include/souffle/CompiledRamRelation.h:1274:19: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
../../../src/../include/souffle/CompiledRamRelation.h: In instantiation of ‘std::vector<souffle::range<decltype (declval<typename std::conditional<souffle::ram::index_utils::contains_full_index<arity, Indices ...>::value, souffle::ram::detail::GenericRelationGroup<config, arity, Indices ...>, souffle::ram::detail::GenericRelationGroup<config, arity, typename souffle::ram::index_utils::get_full_index<arity>::type, Indices ...> >::type>().get<typename souffle::ram::index_utils::get_first_full_index<arity, Indices ..., typename souffle::ram::index_utils::get_full_index<arity>::type>::type>().begin())> > souffle::ram::detail::GenericRelation<config, arity, Indices>::partition() const [with config = souffle::ram::detail::std_unordered_config; unsigned int arity = 3u; Indices = {souffle::ram::index<2u>, souffle::ram::index<0u, 1u, 2u>}; decltype (declval<typename std::conditional<souffle::ram::index_utils::contains_full_index<arity, Indices ...>::value, souffle::ram::detail::GenericRelationGroup<config, arity, Indices ...>, souffle::ram::detail::GenericRelationGroup<config, arity, typename souffle::ram::index_utils::get_full_index<arity>::type, Indices ...> >::type>().get<typename souffle::ram::index_utils::get_first_full_index<arity, Indices ..., typename souffle::ram::index_utils::get_full_index<arity>::type>::type>().begin()) = std::__detail::_Node_const_iterator<souffle::ram::Tuple<int, 3ul>, true, true>; typename std::conditional<souffle::ram::index_utils::contains_full_index<arity, Indices ...>::value, souffle::ram::detail::GenericRelationGroup<config, arity, Indices ...>, souffle::ram::detail::GenericRelationGroup<config, arity, typename souffle::ram::index_utils::get_full_index<arity>::type, Indices ...> >::type = souffle::ram::detail::GenericRelationGroup<souffle::ram::detail::std_unordered_config, 3u, souffle::ram::index<2u>, souffle::ram::index<0u, 1u, 2u> >; typename souffle::ram::index_utils::get_first_full_index<arity, Indices ..., typename souffle::ram::index_utils::get_full_index<arity>::type>::type = souffle::ram::index<0u, 1u, 2u>]’:
souffleSfcCZ8.cpp:193:31:   required from ‘void souffle::Sf___souffleSfcCZ8::runFunction(std::__cxx11::string, std::__cxx11::string) [with bool performIO = false; std::__cxx11::string = std::__cxx11::basic_string<char>]’
souffleSfcCZ8.cpp:260:33:   required from here
../../../src/../include/souffle/CompiledRamRelation.h:1274:19: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
../../../src/../include/souffle/CompiledRamRelation.h: In instantiation of ‘typename std::enable_if<typename config::covers_query<Index, First>::value, souffle::range<typename config::set_type<arity, First>::const_iterator> >::type souffle::ram::detail::GenericRelationGroup<config, arity, First, Rest ...>::equal_range(const tuple_type&) const [with Index = souffle::ram::index<2u>; config = souffle::ram::detail::std_unordered_config; unsigned int arity = 3u; First = souffle::ram::index<2u>; Rest = {souffle::ram::index<0u, 1u, 2u>}; typename std::enable_if<typename config::covers_query<Index, First>::value, souffle::range<typename config::set_type<arity, First>::const_iterator> >::type = souffle::range<std::__detail::_Node_const_iterator<souffle::ram::Tuple<int, 3ul>, true, true> >; souffle::ram::detail::GenericRelationGroup<config, arity, First, Rest ...>::tuple_type = souffle::ram::Tuple<int, 3ul>]’:
../../../src/../include/souffle/CompiledRamRelation.h:1248:69:   required from ‘decltype (((const souffle::ram::detail::GenericRelation<config, arity, Indices>*)this)->souffle::ram::detail::GenericRelation<config, arity, Indices>::indices.equal_range<souffle::ram::index<Columns ...> >(value)) souffle::ram::detail::GenericRelation<config, arity, Indices>::equalRange(const tuple_type&, souffle::ram::detail::GenericRelation<config, arity, Indices>::operation_context&) const [with unsigned int ...Columns = {2u}; config = souffle::ram::detail::std_unordered_config; unsigned int arity = 3u; Indices = {souffle::ram::index<2u>, souffle::ram::index<0u, 1u, 2u>}; decltype (((const souffle::ram::detail::GenericRelation<config, arity, Indices>*)this)->souffle::ram::detail::GenericRelation<config, arity, Indices>::indices.equal_range<souffle::ram::index<Columns ...> >(value)) = souffle::range<std::__detail::_Node_const_iterator<souffle::ram::Tuple<int, 3ul>, true, true> >; souffle::ram::detail::GenericRelation<config, arity, Indices>::tuple_type = souffle::ram::Tuple<int, 3ul>]’
souffleSfcCZ8.cpp:174:36:   required from ‘void souffle::Sf___souffleSfcCZ8::runFunction(std::__cxx11::string, std::__cxx11::string) [with bool performIO = false; std::__cxx11::string = std::__cxx11::basic_string<char>]’
souffleSfcCZ8.cpp:260:33:   required from here
../../../src/../include/souffle/CompiledRamRelation.h:1088:26: error: ‘const data_type {aka const class std::unordered_multiset<souffle::ram::Tuple<int, 3ul>, souffle::ram::detail::tuple_hasher<souffle::ram::index<2u> >, souffle::ram::detail::tuple_equal<souffle::ram::index<2u> >, std::allocator<souffle::ram::Tuple<int, 3ul> > >}’ has no member named ‘lower_bound’
         return make_range(data.lower_bound(index_utils::lower<First, Index>(t)),
                          ^
../../../src/../include/souffle/CompiledRamRelation.h:1088:26: error: ‘const data_type {aka const class std::unordered_multiset<souffle::ram::Tuple<int, 3ul>, souffle::ram::detail::tuple_hasher<souffle::ram::index<2u> >, souffle::ram::detail::tuple_equal<souffle::ram::index<2u> >, std::allocator<souffle::ram::Tuple<int, 3ul> > >}’ has no member named ‘upper_bound’
