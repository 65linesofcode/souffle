//
// Type System 2
//
// This test checks that types are handled correctly. It was
// created for issue #201 "Type system: Fails when Union type
// expands to different primitive types".
//

// Numbers

// Primitive Types

.number_type number_primi_1
.number_type number_primi_2
.number_type number_primi_3

.type number_primi_1_2 = number_primi_1 | number_primi_2

.decl number_primi_relation_1(x:number_primi_1)
.decl number_primi_relation_2(x:number_primi_2)
.decl number_primi_relation_3(x:number_primi_3)
.decl number_primi_relation_1_2(x:number_primi_1_2)

number_primi_relation_1(1).
number_primi_relation_1(2).

number_primi_relation_2(2).
number_primi_relation_2(3).

number_primi_relation_1(X) :- number_primi_relation_2(X). // error

number_primi_relation_1_2(X) :- number_primi_relation_1(X).
number_primi_relation_1_2(X) :- number_primi_relation_2(X).
number_primi_relation_1_2(X) :- number_primi_relation_1(X), number_primi_relation_2(X). // error
number_primi_relation_1_2(X) :- !number_primi_relation_1(X), !number_primi_relation_2(X).

number_primi_relation_3(X) :- number_primi_relation_1_2(X).

// Union Types

.type number_union_1 = number
.type number_union_2 = number
.type number_union_3 = number

.type number_union_1_2 = number_union_1 | number_union_2

.decl number_union_relation_1(x:number_union_1)
.decl number_union_relation_2(x:number_union_2)
.decl number_union_relation_3(x:number_union_3)
.decl number_union_relation_1_2(x:number_union_1_2)

number_union_relation_1(1).
number_union_relation_1(2).

number_union_relation_2(2).
number_union_relation_2(3).

number_union_relation_1(X) :- number_union_relation_2(X). // TODO

number_union_relation_1_2(X) :- number_union_relation_1(X). // TODO
number_union_relation_1_2(X) :- number_union_relation_2(X). // TODO
number_union_relation_1_2(X) :- number_union_relation_1(X), number_union_relation_2(X). // TODO
number_union_relation_1_2(X) :- !number_union_relation_1(X), !number_union_relation_2(X). // TODO

number_union_relation_3(X) :- number_union_relation_1_2(X). // TODO

// Symbols

// Primitive Types

.symbol_type symbol_primi_1
.symbol_type symbol_primi_2
.symbol_type symbol_primi_3

.type symbol_primi_1_2 = symbol_primi_1 | symbol_primi_2

.decl symbol_primi_relation_1(x:symbol_primi_1)
.decl symbol_primi_relation_2(x:symbol_primi_2)
.decl symbol_primi_relation_3(x:symbol_primi_3)
.decl symbol_primi_relation_1_2(x:symbol_primi_1_2)

symbol_primi_relation_1(1).
symbol_primi_relation_1(2).

symbol_primi_relation_2(2).
symbol_primi_relation_2(3).

symbol_primi_relation_1(X) :- symbol_primi_relation_2(X). // error

symbol_primi_relation_1_2(X) :- symbol_primi_relation_1(X).
symbol_primi_relation_1_2(X) :- symbol_primi_relation_2(X).
symbol_primi_relation_1_2(X) :- symbol_primi_relation_1(X), symbol_primi_relation_2(X). // error
symbol_primi_relation_1_2(X) :- !symbol_primi_relation_1(X), !symbol_primi_relation_2(X).

symbol_primi_relation_3(X) :- symbol_primi_relation_1_2(X).

// Union Types

.type symbol_union_1 = symbol
.type symbol_union_2 = symbol
.type symbol_union_3 = symbol

.type symbol_union_1_2 = symbol_union_1 | symbol_union_2

.decl symbol_union_relation_1(x:symbol_union_1)
.decl symbol_union_relation_2(x:symbol_union_2)
.decl symbol_union_relation_3(x:symbol_union_3)
.decl symbol_union_relation_1_2(x:symbol_union_1_2)

symbol_union_relation_1(1).
symbol_union_relation_1(2).

symbol_union_relation_2(2).
symbol_union_relation_2(3).

symbol_union_relation_1(X) :- symbol_union_relation_2(X). // TODO

symbol_union_relation_1_2(X) :- symbol_union_relation_1(X). // TODO
symbol_union_relation_1_2(X) :- symbol_union_relation_2(X). // TODO
symbol_union_relation_1_2(X) :- symbol_union_relation_1(X), symbol_union_relation_2(X). // TODO
symbol_union_relation_1_2(X) :- !symbol_union_relation_1(X), !symbol_union_relation_2(X). // TODO

symbol_union_relation_3(X) :- symbol_union_relation_1_2(X). // TODO

// Numbers and Symbols

.type number_symbol = number | symbol // error

.type number_symbol_primi = number_primi_1 | symbol_primi_1 // error
.type number_symbol_primi_1_2 = number_primi_1_2 | symbol_primi_1_2 // error

.type number_symbol_union = number_union_1 | symbol_union_1 // error
.type number_symbol_union_1_2 = number_union_1_2 | symbol_union_1_2 // error

